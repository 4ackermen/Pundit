# Task Set 1 : hello, mapping, multiply, allorany, nlists, ginortS, athletesort

hello:
    name: Hello World
    desc: Prints Hello World
    tags:
        - programming
    value: 10
    flageval: no
    language: python
    maxlines: 0
    allowed: None
    delimiter: !!str " "
    testcases:
        sample:
           "": "Hello World!\n"
        input:
            - []
        output:
            - [Hello World!]

mapping:
    name: Mapping
    desc: Print the given numbers as a list.
    tags:
        - programming
    value: 90
    flageval: no
    language: python
    allowed: None
    maxlines: 0
    delimiter: !!str "\n"
    testcases:
        sample:
            
        input:
            - ['88 1203 85 146 170 109 1224 237 747']
            - ['1538 694 574 1546 363 245 1515 1342']
            - ['1583 582 587 1709 860 108 1847']
            - ['955 1669 59 646 1416']
            - ['1394 1355 670 615 1278 746 1013 1208 1331']
            - ['135 108 646 1287 1234 1542']
            - ['85 879 1427 246 1858 232 1569 1652']
            - ['1899 774 1891 1942 1218']
            - ['1810 1258 173 1069 439 1753 113']
            - ['548 1395 146 1588 551']


        output:
            - ['[88, 1203, 85, 146, 170, 109, 1224, 237, 747]']
            - ['[1538, 694, 574, 1546, 363, 245, 1515, 1342]']
            - ['[1583, 582, 587, 1709, 860, 108, 1847]']
            - ['[955, 1669, 59, 646, 1416]']
            - ['[1394, 1355, 670, 615, 1278, 746, 1013, 1208, 1331]']
            - ['[135, 108, 646, 1287, 1234, 1542]']
            - ['[85, 879, 1427, 246, 1858, 232, 1569, 1652]']
            - ['[1899, 774, 1891, 1942, 1218]']
            - ['[1810, 1258, 173, 1069, 439, 1753, 113]']
            - ['[548, 1395, 146, 1588, 551]']

multiply:
    name: Multi
    desc: Print the product of the all given numbers.
    tags:
        - programming
    value: 100
    flageval: no
    language: python
    allowed: 
        - functools
    maxlines: 0
    delimiter: !!str "\n"
    testcases:
        sample:

        input:
            - ['88 1203 85 146 170 109 1224 237 747']
            - ['1538 694 574 1546 363 245 1515 1342']
            - ['1583 582 587 1709 860 108 1847']
            - ['955 1669 59 646 1416']
            - ['1394 1355 670 615 1278 746 1013 1208 1331']
            - ['135 108 646 1287 1234 1542']
            - ['85 879 1427 246 1858 232 1569 1652']
            - ['1899 774 1891 1942 1218']
            - ['1810 1258 173 1069 439 1753 113']
            - ['548 1395 146 1588 551']


        output:
            - ['5275284251213114899200']
            - ['171267534552657440066400']
            - ['158552526078356021280']
            - ['86021595066480']
            - ['1208581950081796263235152000']
            - ['23065778770800480']
            - ['29304449148407414163840']
            - ['6574367365573896']
            - ['36619120054407228460']
            - ['97658425666080']


togetten:
    name: Toget10
    desc: None
    tags:
        - programming
    value: 150
    flageval: no
    language: c
    flags:
        - -v
    maxlines: 0
    allowed: None
    delimiter: !!str "\n"
    testcases:
        sample:
           "": ""
        input:
            - ['2', '8 9']
            - ['2', '10 10']
            - ['4', '5 6 7 8']
        output:
            - ['4']
            - ['0']
            - ['24']


warmup:
   name: warmup
   desc: None
   tags:
      - web
   value: 150
   flageval: yes
   flag: "pundit{this_is_a_warm_up_challenge}"
